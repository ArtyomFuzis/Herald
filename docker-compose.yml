services:
  rabbitmq:
    image: rabbitmq:4.0.5-management-alpine
    hostname: rabbitmq
    restart: always
    env_file: "vars_rabbitmq.env.example"      
    volumes:
      - ./rabbitmq-data:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
  postgres:
    image: postgres:17.2
    restart: always
    hostname: postgres
    env_file: "vars_postgres.env.example"
    ports:
      - 5433:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  bot_handler:
    build:
      context: /BotHandler/
      dockerfile: Dockerfile
    image: bothandler
    restart: always
    env_file: "vars_spring.env.example"
    develop:
      watch:
        - path: BotHandler/build/libs/BotHandler-0.0.1-SNAPSHOT.jar
          action: rebuild
  service:
    build:
      context: /Service/
      dockerfile: Dockerfile
    image: service
    restart: always
    env_file: "vars_spring.env.example"
    ports:
      - 8080:8080
    develop:
      watch:
        - path: Service/build/libs/TelegramBot-0.0.1-SNAPSHOT.jar
          action: rebuild
  telegram:
    build:
      context: /Bots/TelegramBot
      dockerfile: Dockerfile
    image: telegram_bot
    restart: always
    env_file: "vars_spring.env.example"
    develop:
      watch:
        - path: Bots/TelegramBot/build/libs/Service-0.0.1-SNAPSHOT
          action: rebuild
